{"ast":null,"code":"var _jsxFileName = \"/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Elements, CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from \"@stripe/stripe-js/pure\";\nconst stripePromise = loadStripe('pk_test_');\n\nconst checkout = () => /*#__PURE__*/React.createElement(Elements, {\n  stripe: stripePromise,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CheckoutForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}));\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (event.error) {\n        this.setState({\n          error: event.error.message\n        });\n      } else {\n        this.setState({\n          error: null\n        });\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const card = elements.getElement(CardElement);\n      const {\n        paymentMethod,\n        error\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: card\n      });\n    };\n\n    this.state = {\n      error: null,\n      email: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"stripe-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-input\",\n      id: \"email\",\n      name: \"name\",\n      type: \"email\",\n      placeholder: \"jenny.rosen@example.com\",\n      required: true,\n      value: email,\n      onChange: event => {\n        setEmail(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"card-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Credit or debit card\"), /*#__PURE__*/React.createElement(CardElement, {\n      id: \"card-element\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-errors\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, error)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Submit Payment\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js"],"names":["React","Component","Elements","CardElement","useElements","useStripe","loadStripe","stripePromise","checkout","CheckoutForm","constructor","props","handleChange","event","error","setState","message","handleSubmit","preventDefault","card","elements","getElement","paymentMethod","stripe","createPaymentMethod","type","state","email","render","setEmail","target","value","App"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Elements, CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\n\nconst stripePromise = loadStripe('pk_test_');\nconst checkout = () => (\n  <Elements stripe={stripePromise}>\n    <CheckoutForm />\n  </Elements>\n);\n\nclass CheckoutForm extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            error : null,\n            email :''\n        }\n    }\n\n    handleChange = (event) => {\n        if (event.error) {\n          this.setState({error:event.error.message});\n        } else {\n          this.setState({error:null});\n        }\n      }\n    \n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const card = elements.getElement(CardElement);\n \n    const {paymentMethod, error} = await stripe.createPaymentMethod({\n     type: 'card',\n     card: card\n});\n      };\n    \n    render(){\n        return(\n            <form onSubmit={handleSubmit} className=\"stripe-form\">\n            <div className=\"form-row\">\n              <label htmlFor=\"email\">Email Address</label>\n              <input className=\"form-input\" id=\"email\" name=\"name\"    type=\"email\" placeholder=\"jenny.rosen@example.com\" required \n        value={email} onChange={(event) => { setEmail(event.target.value)}} />\n            </div>\n            <div className=\"form-row\">\n              <label for=\"card-element\">Credit or debit card</label> \n              <CardElement id=\"card-element\" onChange={handleChange}/>\n              <div className=\"card-errors\" role=\"alert\">{error}</div>\n            </div>\n            <button type=\"submit\" className=\"submit-btn\">\n              Submit Payment\n            </button>\n          </form>\n        )\n        \n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}