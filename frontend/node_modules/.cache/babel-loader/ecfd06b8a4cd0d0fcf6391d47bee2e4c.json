{"ast":null,"code":"var _jsxFileName = \"/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Elements, CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from \"@stripe/stripe-js/pure\";\nimport { saveStripeURL } from \"../constants\";\nimport { authAxios } from '../store/utility';\nconst stripePromise = loadStripe('pk_test_');\n\nconst checkout = () => /*#__PURE__*/React.createElement(Elements, {\n  stripe: stripePromise,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CheckoutForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}));\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEmailChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.error) {\n        this.setState({\n          error: event.error.message\n        });\n      } else {\n        this.setState({\n          error: null\n        });\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const elements = useElements();\n      const stripe = useStripe();\n      const card = elements.getElement(CardElement);\n      const email = this.state.email;\n      const {\n        paymentMethod,\n        error\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: card\n      });\n      authAxios.post(saveStripeURL, {\n        email,\n        payment_method_id: paymentMethod.id\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      error: null,\n      email: ''\n    };\n\n    const _stripe = useStripe();\n\n    const _elements = useElements();\n  }\n\n  render() {\n    const {\n      error,\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"stripe-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-input\",\n      id: \"email\",\n      name: \"name\",\n      type: \"email\",\n      placeholder: \"jenny.rosen@example.com\",\n      required: true,\n      value: email,\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"card-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Credit or debit card\"), /*#__PURE__*/React.createElement(CardElement, {\n      id: \"card-element\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-errors\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, error)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Submit Payment\"));\n  }\n\n}\n\nexport default checkout;","map":{"version":3,"sources":["/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js"],"names":["React","Component","Elements","CardElement","useElements","useStripe","loadStripe","saveStripeURL","authAxios","stripePromise","checkout","CheckoutForm","constructor","props","handleEmailChange","e","setState","target","name","value","handleChange","event","error","message","handleSubmit","preventDefault","elements","stripe","card","getElement","email","state","paymentMethod","createPaymentMethod","type","post","payment_method_id","id","then","response","console","log","data","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Elements, CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nimport { loadStripe } from \"@stripe/stripe-js/pure\";\nimport {saveStripeURL} from \"../constants\";\nimport {authAxios} from '../store/utility';\n\n\nconst stripePromise = loadStripe('pk_test_');\nconst checkout = () => (\n  <Elements stripe={stripePromise}>\n    <CheckoutForm />\n  </Elements>\n);\n\nclass CheckoutForm extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            error : null,\n            email :''\n        }\n        const stripe = useStripe();\n  const elements = useElements()\n    }\n\n    handleEmailChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n      };\n    \n\n    handleChange = (event) => {\n        if (event.error) {\n          this.setState({error:event.error.message});\n        } else {\n          this.setState({error:null});\n        }\n      }\n    \n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const elements = useElements()\n        const stripe = useStripe();\n        const card = elements.getElement(CardElement);\n        const email = this.state.email\n \n    const {paymentMethod, error} = await stripe.createPaymentMethod({\n     type: 'card',\n     card: card\n        });\n\n        authAxios\n        .post(saveStripeURL, {\n            email, payment_method_id: paymentMethod.id})\n          .then(response => {\n            console.log(response.data);\n          }).catch(error => {\n            console.log(error)\n          })\n\n\n      };\n    \n    render(){\n        const{error, email}=this.state\n        return(\n            <form onSubmit={this.handleSubmit} className=\"stripe-form\">\n            <div className=\"form-row\">\n              <label htmlFor=\"email\">Email Address</label>\n              <input className=\"form-input\" id=\"email\" name=\"name\"    type=\"email\" placeholder=\"jenny.rosen@example.com\" required \n        value={email} onChange={this.handleEmailChange} />\n            </div>\n            <div className=\"form-row\">\n              <label for=\"card-element\">Credit or debit card</label> \n              <CardElement id=\"card-element\" onChange={this.handleChange}/>\n              <div className=\"card-errors\" role=\"alert\">{error}</div>\n            </div>\n            <button type=\"submit\" className=\"submit-btn\">\n              Submit Payment\n            </button>\n          </form>\n        )\n        \n    }\n}\n\n\nexport default checkout;"]},"metadata":{},"sourceType":"module"}