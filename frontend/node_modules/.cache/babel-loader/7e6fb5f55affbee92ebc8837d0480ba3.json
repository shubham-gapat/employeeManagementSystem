{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/user/login/\", {\n      email: email,\n      password: password\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"token\", token);\n      dispatch(authSuccess(token));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (firstname, lastname, email, password, address, dob, company) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/user/\", {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      password: password,\n      address: address,\n      dob: dob,\n      company: company\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined || token === '') {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/shubham/project/Emplyee-Management-system/frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","email","password","post","then","res","data","setItem","catch","err","authSignup","firstname","lastname","address","dob","company","console","log","authCheckState","getItem","undefined","expirationDate","Date"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/user/login/\", {\n        email: email,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.token;\n        localStorage.setItem(\"token\", token);\n        dispatch(authSuccess(token));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (firstname,lastname,email,password,address,dob,company) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/user/\", {\n        firstname:firstname,\n        lastname:lastname,\n        email:email,\n        password:password,\n        address:address,\n        dob:dob,\n        company:company\n      })\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined || token === '') {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } \n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}