{"ast":null,"code":"var _jsxFileName = \"/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js\";\nimport React, { Component } from \"react\";\nimport { CardElement, injectStripe, Elements, StripeProvider } from \"react-stripe-elements\";\nimport { Container, Dimmer, Image, Loader, Message, Segment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { authAxios } from \"../store/utility\";\nimport { checkoutURL } from \"../constants\";\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      success: false\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(result => {\n          if (result.error) {\n            this.setState({\n              error: result.error.message,\n              loading: false\n            });\n          } else {\n            this.setState({\n              error: null\n            });\n            authAxios.post(checkoutURL, {\n              stripeToken: result.token.id\n            }).then(res => {\n              this.setState({\n                loading: false,\n                success: true\n              });\n            }).catch(err => {\n              this.setState({\n                loading: false,\n                error: err\n              });\n            });\n          }\n        });\n      } else {\n        console.log(\"Stripe is not loaded\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      success\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\nconst WrappedForm = () => /*#__PURE__*/React.createElement(Container, {\n  text: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(StripeProvider, {\n  apiKey: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }\n}, \"Complete your order\"), /*#__PURE__*/React.createElement(Elements, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(InjectedForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 11\n  }\n})))));\n\nexport default WrappedForm;","map":{"version":3,"sources":["/home/shubham/project/Emplyee-Management-system/frontend/src/containers/Checkout.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","Container","Dimmer","Image","Loader","Message","Segment","withRouter","authAxios","checkoutURL","CheckoutForm","state","loading","error","success","submit","ev","preventDefault","setState","props","stripe","createToken","then","result","message","post","stripeToken","token","id","res","catch","err","console","log","render","JSON","stringify","InjectedForm","WrappedForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CardElement,\n  injectStripe,\n  Elements,\n  StripeProvider\n} from \"react-stripe-elements\";\nimport {\n  Container,\n  Dimmer,\n  Image,\n  Loader,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport {  withRouter } from \"react-router-dom\";\nimport { authAxios } from \"../store/utility\";\nimport {\n  checkoutURL\n} from \"../constants\";\n\n\n\n\n\nclass CheckoutForm extends Component {\n  state = {\n    loading: false,\n    error: null,\n    success: false\n  };\n\n  submit = ev => {\n    ev.preventDefault();\n    this.setState({ loading: true });\n    if (this.props.stripe) {\n      this.props.stripe.createToken().then(result => {\n        if (result.error) {\n          this.setState({ error: result.error.message, loading: false });\n        } else {\n          this.setState({ error: null });\n          authAxios\n            .post(checkoutURL, {\n              stripeToken: result.token.id,\n            })\n            .then(res => {\n              this.setState({ loading: false, success: true });\n            })\n            .catch(err => {\n              this.setState({ loading: false, error: err });\n            });\n        }\n      });\n    } else {\n      console.log(\"Stripe is not loaded\");\n    }\n  };\n\n  render() {\n    const {\n      error,\n      loading,\n      success,\n    } = this.state;\n\n    return (\n      <div>\n        {error && (\n          <Message\n            error\n            header=\"There was some errors with your submission\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        {loading && (\n          <Segment>\n            <Dimmer active inverted>\n              <Loader inverted>Loading</Loader>\n            </Dimmer>\n            <Image src=\"/images/wireframe/short-paragraph.png\" />\n          </Segment>\n        )}\n          </div>\n    );\n  }\n}\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\nconst WrappedForm = () => (\n  <Container text>\n    <StripeProvider apiKey=\"\">\n      <div>\n        <h1>Complete your order</h1>\n        <Elements>\n          <InjectedForm />\n        </Elements>\n      </div>\n    </StripeProvider>\n  </Container>\n);\n\nexport default WrappedForm;"]},"metadata":{},"sourceType":"module"}